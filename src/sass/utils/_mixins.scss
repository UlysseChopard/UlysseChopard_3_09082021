@use "sass:meta";
@use "sass:list";
@use "./variables" as var;

@mixin set-property-for-all($page: var.$structure, $exceptions...) {
  // Si c'est la structure enti√®re
  @if type-of($value: $page) == "map" {
    @each $block, $elements in $page {
      @if not list.index($exceptions, $block) {
        .#{$block} {
          @content;
          @each $elem in $elements {
            @if not list.index($exceptions, $elem) {
              &__#{$elem} {
                @content;
              }
            }
          }
        }
      }
    }
  }
  // C'est un bloc
  @else if type-of($value: $page) == "list" {
    @each $element in $page {
      @if not list.index($exception, $element) {
        @include set-property($element) {
          @content;
        }
      }
    }
  }
  // C'est un bloc sans element, un element ou un modifier
  @else {
    @include set-property($page) {
      @content;
    }
  }
}

@mixin flex-elem($flex: auto,
  $flex-flow: column nowrap,
  $align-items: center,
  $justify-content: space-evenly
) {
  display: flex;
  flex: $flex;
  flex-flow: $flex-flow;
  align-items: $align-items;
  justify-content: $justify-content;
  min-width: 0;
}

@mixin largeur($pourcent: 100%) {
  width: $pourcent;
  min-width: $pourcent;
  max-width: $pourcent;
}

@mixin set-property($el) {
  @if list.index(var.$modifiers, $el) {
    @each $block, $elements in var.$structure {
      .#{$block} {
        &--#{$el} {
          @content;
        }
        @each $elem in $elements {
          &__#{$elem}--#{$el} {
            @content;
          }
        }
      }
    }
  } @else {
    @each $block, $elements in var.$structure {
      @if $el == $block {
        .#{$el} {
          @content;
        }
      } @else if list.index($elements, $el) {
        .#{$block}__#{$el} {
          @content;
        }
      }
    }
  }
}

@mixin set-property-for-list($elements...) {
  @each $elem in $elements {
    @include set-property($elem) {
      @content;
    }
  }
}
